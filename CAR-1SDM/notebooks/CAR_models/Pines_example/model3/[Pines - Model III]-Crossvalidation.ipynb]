{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Crossvalidation of model III\n",
    "\n",
    "## Correlated Markov Gaussian Random Field\n",
    " $$ [P , S ] = [P | GMRF_p] [ S | GMRF_s] $$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Type 'citation(\"pROC\")' for a citation.\n",
      "\n",
      "\n",
      "Attaching package: ‘pROC’\n",
      "\n",
      "\n",
      "The following objects are masked from ‘package:stats’:\n",
      "\n",
      "    cov, smooth, var\n",
      "\n",
      "\n",
      "Loading required package: ggplot2\n",
      "\n",
      "Loading required package: lattice\n",
      "\n",
      "Warning message in system(\"timedatectl\", intern = TRUE):\n",
      "“running command 'timedatectl' had status 1”\n",
      "Loading required package: MASS\n",
      "\n",
      "Loading required package: Rcpp\n",
      "\n",
      "Registered S3 method overwritten by 'GGally':\n",
      "  method from   \n",
      "  +.gg   ggplot2\n",
      "\n",
      "\n",
      "Attaching package: ‘dplyr’\n",
      "\n",
      "\n",
      "The following object is masked from ‘package:MASS’:\n",
      "\n",
      "    select\n",
      "\n",
      "\n",
      "The following objects are masked from ‘package:stats’:\n",
      "\n",
      "    filter, lag\n",
      "\n",
      "\n",
      "The following objects are masked from ‘package:base’:\n",
      "\n",
      "    intersect, setdiff, setequal, union\n",
      "\n",
      "\n",
      "\n",
      "Attaching package: ‘purrr’\n",
      "\n",
      "\n",
      "The following object is masked from ‘package:caret’:\n",
      "\n",
      "    lift\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "library(pROC)\n",
    "library('caret')\n",
    "\n",
    "## Import code:\n",
    "setwd('/app/external_plugins/biospytial_rwrapper/CAR-1SDM/R/')\n",
    "rm(list=ls())    \n",
    "\n",
    "source(\"preprocess_data.R\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "species ~ Elevationm + Precipitationm"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "formula_sample =  sample ~ Disttoroadm + Populationm\n",
    "formula_presence = species ~ Elevationm + Precipitationm\n",
    "formula <- response ~ Disttoroadm + Populationm + Elevationm + Precipitationm\n",
    "\n",
    "## Extract the response variables\n",
    "Y = DataFrame %>% select(Pinophyta,Plantae)\n",
    "## Extract the formula\n",
    "formula_presence\n",
    "rhs <- ~ Elevationm + MeanTempm\n",
    "X <- model.frame(rhs,DataFrame,na.action='na.pass')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>\n",
       ".list-inline {list-style: none; margin:0; padding: 0}\n",
       ".list-inline>li {display: inline-block}\n",
       ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
       "</style>\n",
       "<ol class=list-inline><li>'X'</li><li>'LUCA'</li><li>'Plantae'</li><li>'Pinophyta'</li><li>'Abies'</li><li>'cellids'</li><li>'Disttoroadm'</li><li>'Elevationm'</li><li>'MaxTempm'</li><li>'MeanTempm'</li><li>'MinTempm'</li><li>'Populationm'</li><li>'Precipitationm'</li><li>'SolarRadiationm'</li><li>'VaporPresm'</li><li>'WindSpm'</li><li>'Longitude'</li><li>'Latitude'</li><li>'wwfmhtnum'</li><li>'wwfmhtnam'</li><li>'covid'</li><li>'name'</li><li>'code_id2'</li><li>'tipos'</li><li>'geometry'</li><li>'sample'</li><li>'species'</li></ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'X'\n",
       "\\item 'LUCA'\n",
       "\\item 'Plantae'\n",
       "\\item 'Pinophyta'\n",
       "\\item 'Abies'\n",
       "\\item 'cellids'\n",
       "\\item 'Disttoroadm'\n",
       "\\item 'Elevationm'\n",
       "\\item 'MaxTempm'\n",
       "\\item 'MeanTempm'\n",
       "\\item 'MinTempm'\n",
       "\\item 'Populationm'\n",
       "\\item 'Precipitationm'\n",
       "\\item 'SolarRadiationm'\n",
       "\\item 'VaporPresm'\n",
       "\\item 'WindSpm'\n",
       "\\item 'Longitude'\n",
       "\\item 'Latitude'\n",
       "\\item 'wwfmhtnum'\n",
       "\\item 'wwfmhtnam'\n",
       "\\item 'covid'\n",
       "\\item 'name'\n",
       "\\item 'code\\_id2'\n",
       "\\item 'tipos'\n",
       "\\item 'geometry'\n",
       "\\item 'sample'\n",
       "\\item 'species'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'X'\n",
       "2. 'LUCA'\n",
       "3. 'Plantae'\n",
       "4. 'Pinophyta'\n",
       "5. 'Abies'\n",
       "6. 'cellids'\n",
       "7. 'Disttoroadm'\n",
       "8. 'Elevationm'\n",
       "9. 'MaxTempm'\n",
       "10. 'MeanTempm'\n",
       "11. 'MinTempm'\n",
       "12. 'Populationm'\n",
       "13. 'Precipitationm'\n",
       "14. 'SolarRadiationm'\n",
       "15. 'VaporPresm'\n",
       "16. 'WindSpm'\n",
       "17. 'Longitude'\n",
       "18. 'Latitude'\n",
       "19. 'wwfmhtnum'\n",
       "20. 'wwfmhtnam'\n",
       "21. 'covid'\n",
       "22. 'name'\n",
       "23. 'code_id2'\n",
       "24. 'tipos'\n",
       "25. 'geometry'\n",
       "26. 'sample'\n",
       "27. 'species'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       " [1] \"X\"               \"LUCA\"            \"Plantae\"         \"Pinophyta\"      \n",
       " [5] \"Abies\"           \"cellids\"         \"Disttoroadm\"     \"Elevationm\"     \n",
       " [9] \"MaxTempm\"        \"MeanTempm\"       \"MinTempm\"        \"Populationm\"    \n",
       "[13] \"Precipitationm\"  \"SolarRadiationm\" \"VaporPresm\"      \"WindSpm\"        \n",
       "[17] \"Longitude\"       \"Latitude\"        \"wwfmhtnum\"       \"wwfmhtnam\"      \n",
       "[21] \"covid\"           \"name\"            \"code_id2\"        \"tipos\"          \n",
       "[25] \"geometry\"        \"sample\"          \"species\"        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "colnames(DataFrame)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "K = dim(M_bis)[1]\n",
    "trials <- matrix(rep(1.0,K*2), ncol=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "## This is wrong, the formula is also wrong!\n",
    "## Make ROC curve\n",
    "\n",
    "\n",
    "#burnin = 500\n",
    "#n.sample = 1000\n",
    "#thin = 1\n",
    "\n",
    "\n",
    "n.sample = 100000\n",
    "burnin=80000                                                                                                                                                           \n",
    "thin = 5\n",
    "\n",
    "nonas = which(! is.na(DataFrame$species) )\n",
    "Y_withoutNA = DataFrame$species[nonas]\n",
    "validate = createFolds(y = Y_withoutNA, k=7, returnTrain = FALSE)\n",
    "\n",
    "\n",
    "\n",
    "DataFrame$presences <- DataFrame$species\n",
    "l <- list()\n",
    "i = 1\n",
    "DataFrame$predicted_values_CV <- NA\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Setting up the model.\n",
      "Generating 4000 post burnin and thinned (if requested) samples.\n",
      "  |======================================================================| 100%\n",
      "Summarising results.\n",
      "Finished in  5860.8 seconds.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Setting levels: control = 0, case = 1\n",
      "\n",
      "Setting direction: controls < cases\n",
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Setting up the model.\n",
      "Generating 4000 post burnin and thinned (if requested) samples.\n",
      "  |======================================================================| 100%\n",
      "Summarising results.\n",
      "Finished in  59111.7 seconds.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Setting levels: control = 0, case = 1\n",
      "\n",
      "Setting direction: controls < cases\n",
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Setting up the model.\n",
      "Generating 4000 post burnin and thinned (if requested) samples.\n",
      "  |======================================================================| 100%\n",
      "Summarising results.\n",
      "Finished in  5892.3 seconds.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Setting levels: control = 0, case = 1\n",
      "\n",
      "Setting direction: controls < cases\n",
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Setting up the model.\n",
      "Generating 4000 post burnin and thinned (if requested) samples.\n",
      "  |======================================================================| 100%\n",
      "Summarising results.\n",
      "Finished in  6002.7 seconds.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Setting levels: control = 0, case = 1\n",
      "\n",
      "Setting direction: controls < cases\n",
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Setting up the model.\n",
      "Generating 4000 post burnin and thinned (if requested) samples.\n",
      "  |======================================================================| 100%\n",
      "Summarising results.\n",
      "Finished in  6077.1 seconds.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Setting levels: control = 0, case = 1\n",
      "\n",
      "Setting direction: controls < cases\n",
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Setting up the model.\n",
      "Generating 4000 post burnin and thinned (if requested) samples.\n",
      "  |======================================================================| 100%\n",
      "Summarising results.\n",
      "Finished in  6037 seconds.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Setting levels: control = 0, case = 1\n",
      "\n",
      "Setting direction: controls < cases\n",
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Setting up the model.\n",
      "Generating 4000 post burnin and thinned (if requested) samples.\n",
      "  |======================================================================| 100%\n",
      "Summarising results.\n",
      "Finished in  50133.9 seconds.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Setting levels: control = 0, case = 1\n",
      "\n",
      "Setting direction: controls < cases\n",
      "\n"
     ]
    }
   ],
   "source": [
    "\n",
    "for (fold in validate) {\n",
    "    model3 = list()\n",
    "    observed.presences <- DataFrame$species[fold]\n",
    "    ## Substitue by NA\n",
    "    DataFrame$species[fold] <- NA\n",
    "    \n",
    "    \n",
    "    \n",
    " #   model3 <- MVS.CARleroux(cbind(species,sample) ~ Elevationm + MeanTempm,     \n",
    "    model3 <- MVS.CARleroux(cbind(species,sample) ~   Elevationm + Precipitationm + Disttoroadm + Populationm,\n",
    "                        family = 'binomial',\n",
    "                        trials=trials,\n",
    "                        W=M_bis,\n",
    "                        rho = 1,\n",
    "                        burnin = burnin,\n",
    "                        n.sample = n.sample,\n",
    "                        thin = thin,\n",
    "                        data = DataFrame\n",
    "                         )\n",
    "    \n",
    "\n",
    "    DataFrame$species <- DataFrame$presences\n",
    "    ## Return original values\n",
    "    DataFrame$predicted_values_CV[fold] <- model3$fitted.values[fold]\n",
    "    predicted.probability <- model3$fitted.values[fold]\n",
    "    pROC_obj <- roc(observed.presences,predicted.probability)\n",
    "\n",
    "    l[[i]] <- pROC_obj\n",
    "    i = i + 1\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Setting levels: control = 0, case = 1\n",
      "\n",
      "Setting direction: controls < cases\n",
      "\n",
      "Warning message in plot.ci.se(sens.ci, type = \"shape\", col = \"lightblue\"):\n",
      "“Low definition shape.”\n"
     ]
    },
    {
     "data": {
      "image/png": "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\nNJnqFApFYuJ/FgNas2YNk1//LZo6dSpdiGZtbd22bVs7O7vKysqSkpLdu3cfOXIkNTVVq6ed\nO3duwYIFSqXSy8vL29v7wYMHt2/ffuWVV/766y83NzcNN44aNSo7O1sgEPj5+bm4uDx58uTJ\nkyf//Oc/RSLRt99+S19TW1t78+ZNoVDo5OTk5OQkk8lKS0sTExOHDRu2b9++Hj16aPW05nz/\n/fcCgeD777/n7HsRQvbs2VNTUyMQCGxsbJj8F/v+/fubN29u8bImGfq7EELGjx9P/81xcXFx\ndnauqqoqKSk5ffp0bGwsfcFnn3127tw5QoiTk1OrVq2qqqoqKysPHz585cqVq1evWlv/f1T4\n4osvZs2atWTJkt9//12372tc1tbWrPwqd3d3P3r06EcffcRJr7Wje7A7evQoIeTDDz9UHQMT\nJl48IRKJ2nXo6ODkrDojvnWdPojs3U+rRx2O29irZ89u3bqx2T8AY2juDezWrVvr6+v9/f3z\n8vIyMjKqq6sdHR31aSg2NpaOSosXL543b57qvEwm++KLL06ePKntA5csWaJUKsePH79q1SpC\nSH19/dChQ/Pz8xcuXJiQkNDcXbdu3aITw9GjRyMiIuiTq1ev3rx588GDB1WhwdnZ+cCBA+oB\nrrq6+s0333z8+PHHH3989uxZrZ7WpHPnzlVUVISFhTX4B2vQ70U/nx4oXbdu3YYNGzT0kEZv\nsNS7d++kpKQWL27A0N/l448/Tk1NdXJy2rt3b1TUf97G1NfX5+fnq67x9/cfNWrUsmXL2rVr\nR5+5cOHCvHnziouLv/322y+++EJ15eDBg52cnNLT0ysqKlAcaZp0fxWbl5eXl5fXp08f1bEG\n7HWY90y8eEIkEgVE/E/lxMnd8fSBrb0W65U8L3p65cTvc+bMYbNzAMagYV7dnj17CCHvvvtu\nRESEUqn86aef9GkoOTn56tWrhJD169erpzpCiK2t7apVqy5cuKDVA48dO1ZdXW1vb08nBkKI\ntbX1xo0bCSGJiYkKhaK5G+/cuUMI8fT0VCUGQsjf//538r/ruwqFQvVURwhxdHScOXMmIaS4\nuFjbpzVp/fr1hJApU6Zw+b0IIbGxsS+99JJQyOhX5Mcff1xUVPT++++7u7szuZ7L71JdXU0P\nrf3222+qVEe3oj5J5uOPP167dq0q1RFChgwZMmDAAELIjRs3GjQ9YMAApVK5bt06bb8scEP3\n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\nH9+OB6XjWCXzAAAAAElFTkSuQmCC",
      "text/plain": [
       "plot without title"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#100k\n",
    "pROC_obj <- roc(DataFrame$species,DataFrame$predicted_values_CV,\n",
    "               smoothed= TRUE,\n",
    "               ci = TRUE, ci.alpha=0.9, stratified=FALSE,\n",
    "               plot=TRUE, auc.polygon=TRUE, max.auc.polygon=TRUE, grid=TRUE,\n",
    "               print.auc=TRUE, show.thres=TRUE)\n",
    "sens.ci <- ci.se(pROC_obj)\n",
    "plot(sens.ci,type=\"shape\",col=\"lightblue\")\n",
    "plot(sens.ci, type=\"bars\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "R",
   "language": "R",
   "name": "ir"
  },
  "language_info": {
   "codemirror_mode": "r",
   "file_extension": ".r",
   "mimetype": "text/x-r-source",
   "name": "R",
   "pygments_lexer": "r",
   "version": "4.0.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
